org: kevinchan950120
app: aws-serverless
service: microservice-1

resources:
  Resources:
    UserTable: ${file(./src/databases/dynamodb/schemas/users.schema.yml)}

params:
  dev:
    security_group_ids: ${env:DEV_MICROSERVICE_SECURITY_GROUP_IDS}
    subnet_id_1: ${env:DEV_MICROSERVICE_PRIVATE_SUBNET_1A}
    subnet_id_2: ${env:DEV_MICROSERVICE_PRIVATE_SUBNET_1B}
  default:
    security_group_ids: ${env:DEV_MICROSERVICE_SECURITY_GROUP_IDS}
    subnet_id_1: ${env:DEV_MICROSERVICE_PRIVATE_SUBNET_1A}
    subnet_id_2: ${env:DEV_MICROSERVICE_PRIVATE_SUBNET_1B}

custom:
  esbuild:
    sourcemap: true

  serverless-offline:
    httpPort: 4001
    noAuth: true

package:
  individually: true

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  environment:
    JSONPLACEHOLDER_BASE_URL: ${env:JSONPLACEHOLDER_BASE_URL}

  tracing:
    lambda: true

  vpc:
    securityGroupIds:
      - ${param:security_group_ids}
    subnetIds:
      - ${param:subnet_id_1}
      - ${param:subnet_id_2}

functions:
  retrieve-posts:
    handler: src/services/posts/index.retrievePostsHandler
    timeout: 30
    events:
      - httpApi:
          method: GET
          path: /retrieve-posts

  create-user:
    handler: src/services/users/index.createUserHandler
    timeout: 30
    events:
      - httpApi:
          method: POST
          path: /users/create-user
